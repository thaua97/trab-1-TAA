{"version":3,"sources":["assets/vehicle.svg","components/Header/styles.js","components/Header/index.js","components/Form/styles.js","components/Form/index.js","styles/global.js","index.js","App.js"],"names":["module","exports","Container","styled","header","Header","Wrapper","div","FormCars","form","Text","TextField","SelectControl","FormControl","ControlLabel","FormControlLabel","Check","Checkbox","Button","button","props","color","lighten","Form","useState","client","setClient","vehicle","setVehicle","mark","setMark","renew","setRenew","fipe","setFipe","item","setItem","a","JSON","parse","localStorage","getItem","res","toast","success","warn","error","e","preventDefault","data","push","stringify","err","onSubmit","src","logo","alt","value","onChange","target","variant","label","Grid","container","spacing","xs","InputLabel","htmlFor","Select","input","FilledInput","name","id","MenuItem","control","type","onClick","map","i","key","createGlobalStyle","ReactDOM","render","autoClose","document","getElementById"],"mappings":"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","file":"static/js/main.62485cdd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vehicle.0c179d94.svg\";","import styled from 'styled-components';\r\n\r\nexport const Container = styled.header`\r\n    width: auto;\r\n    height: 70px;\r\n    padding: 15px 90px;\r\n    background: #fff;\r\n    box-shadow: 0 2px 4px 0px rgba(0,0,0,0.3);\r\n    font-weight: 300;\r\n    color: #7159c1;\r\n   \r\n    @media screen and (max-width: 540px) {\r\n        padding: 15px 40px;\r\n        width: 100%\r\n    }\r\n`","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Container>\r\n        <h1>Space Cars</h1>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { lighten } from 'polished';\r\n\r\nimport { TextField, FormControl, FormControlLabel, Checkbox } from '@material-ui/core';\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 100%;\r\n    padding: 0 300px;\r\n\r\n    @media screen and (max-width: 540px) {\r\n        padding: 0 10px;\r\n    }\r\n\r\n    h2 {\r\n        padding: 35px 0;\r\n        text-align: center;\r\n        color: rgba(0,0,0,0.4);\r\n\r\n        @media screen and (max-width: 540px) {\r\n            font-size: 14px;\r\n        }\r\n    }\r\n\r\n    ul {\r\n        height: 300px;\r\n        padding: 40px 0;\r\n        margin-top: 20px;\r\n        overflow: auto;\r\n        \r\n        li {\r\n            padding: 15px;\r\n            margin-bottom: 25px;\r\n            border-radius: 8px;\r\n            background: rgba(255,255,255, 0.4);\r\n\r\n            h1 {\r\n                color: #7159c1;\r\n            }\r\n\r\n            p {\r\n                margin-top: 10px;\r\n                margin-bottom: 10px;\r\n                font-weight: 300;\r\n            }\r\n\r\n            span {\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const FormCars = styled.form`\r\n    height: 100%;\r\n    margin-top: 15px;\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    img {\r\n        width: 200px;\r\n        margin: 20px 0px 40px;\r\n    \r\n        @media screen and (max-width: 540px) {\r\n            width: 160px;\r\n            margin-top: 20px;\r\n            margin-bottom: 60px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Text = styled(TextField)`\r\n    width: 100%;\r\n    margin-bottom: 20px !important;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    \r\n    label {\r\n        color: #7159c1;\r\n    }\r\n`;\r\n\r\nexport const SelectControl = styled(FormControl)`\r\n    width: 100%;\r\n    margin-bottom: 20px !important;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n\r\n    label {\r\n        color: #7159c1;\r\n    }\r\n\r\n`;\r\n\r\nexport const ControlLabel = styled(FormControlLabel)`\r\n    margin-top: 10px !important;\r\n    color: #fff;\r\n`;\r\n\r\nexport const Check = styled(Checkbox)`\r\n    color: #7159c1 !important;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 2px;\r\n    padding: 12px;\r\n    font-size: 12px;\r\n    text-transform: uppercase;\r\n    cursor: pointer;\r\n    color: white;\r\n    background-color: ${props => props.color};\r\n    box-shadow: 0 0 4px #999;\r\n    outline: none;\r\n    background-position: center;\r\n    transition: background 0.8s;\r\n\r\n    &:hover {\r\n        background: ${ props => lighten(0.1, props.color)} radial-gradient(circle, transparent 1%, ${ props => lighten(0.1, props.color)} 1%) center / 15000%;\r\n    }\r\n    \r\n    &:active {\r\n        background-color: ${props => lighten(0.1, props.color)} ;\r\n        background-size: 100%;\r\n        transition: background 0s;\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify'\r\n\r\nimport {\r\n    Container,\r\n    Grid,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FilledInput\r\n\r\n} from '@material-ui/core';\r\n\r\nimport { Wrapper, FormCars, Text, SelectControl, ControlLabel, Check, Button } from './styles';\r\n\r\nimport logo from '../../assets/vehicle.svg';\r\n\r\nexport default function Form() {\r\n    const [ client, setClient ] = useState('');\r\n    const [ vehicle, setVehicle ] = useState('');\r\n    const [ mark, setMark ] = useState('');\r\n    const [ renew, setRenew ] = useState(false);\r\n    const [ fipe, setFipe ] = useState('');\r\n    const [ item, setItem ] = useState('')\r\n    \r\n\r\n    function handleClientChange(e) {\r\n        setClient(e.target.value);\r\n    }\r\n    function handleVehicleChange(e) {\r\n        setVehicle(e.target.value);\r\n    }\r\n    function handleMarkChange(e) {\r\n        setMark(e.target.value);\r\n    }\r\n    function handleRenewChange(e) {\r\n        setRenew(e.target.value);\r\n    }\r\n    function handleFipeChange(e) {\r\n        setFipe(e.target.value);\r\n    }\r\n\r\n    function handleClear() {\r\n        setClient('');\r\n        setVehicle('');\r\n        setMark('');\r\n        setRenew(false);\r\n        setFipe('');\r\n\r\n        toast.success(\"Compos limpos!\");\r\n    }\r\n\r\n    async function handleToList() {\r\n        try {\r\n            const res = await JSON.parse(localStorage.getItem('@spacecar/item'));\r\n            if (!res){\r\n                toast.warn('Nenhum registro no sistema!')\r\n            } else {\r\n                setItem(res)\r\n                toast.success('Listado com sucesso!')\r\n            }\r\n            \r\n        } catch (err) {\r\n            toast.error('Erro ao Carregar informações!')\r\n        }\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if(!client && !vehicle && !mark && !fipe) {\r\n            toast.warn('Preencha todos os campos');\r\n        } else if(!client) {\r\n            toast.warn('Preencha o nome do cliente');\r\n        } else if(!vehicle) {\r\n            toast.warn('Informe o modelo do veiculo');\r\n        } else if(!mark) { \r\n            toast.warn('selecione a marca do veiculo'); \r\n        } else if (!fipe) {\r\n            toast.warn('preencha o valor da tabela FIPE');\r\n        } else {\r\n            try {\r\n                let data = []\r\n                \r\n                if(localStorage.getItem('@spacecar/item')) {\r\n                    data = JSON.parse(localStorage.getItem('@spacecar/item'));\r\n                }\r\n\r\n                data.push(  \r\n                    {\r\n                        client,\r\n                        vehicle,\r\n                        mark,\r\n                        renew,\r\n                        fipe\r\n                    }\r\n                );\r\n                \r\n                localStorage.setItem('@spacecar/item', JSON.stringify(data));\r\n    \r\n                toast.success(\"Proposta Cadastrada!\");\r\n            } catch (err) {\r\n                toast.error(\"Erro ao cadastrar proposta.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <FormCars onSubmit={handleSubmit}>\r\n                    <img src={logo} alt=\"\"/>\r\n                    <Text value={client} onChange={handleClientChange} variant=\"filled\" label=\"Cliente / Contato\"/>\r\n                    <Text value={vehicle} onChange={handleVehicleChange} variant=\"filled\" label=\"Modelo do Veículo\"/>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={6}>\r\n                            <SelectControl variant=\"filled\">\r\n                                <InputLabel htmlFor=\"filled-age-simple\">Marca</InputLabel>\r\n                                <Select\r\n                                    value={mark}\r\n                                    onChange={handleMarkChange}\r\n                                    input={<FilledInput name=\"age\" id=\"filled-age-simple\" />}\r\n                                >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value=\"Ford\">Ford</MenuItem>\r\n                                <MenuItem value=\"Renaut\">Renaut</MenuItem>\r\n                                <MenuItem value=\"Fiat\">Fiat</MenuItem>\r\n                                </Select>\r\n                            </SelectControl>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <ControlLabel control={<Check value=\"checkedC\" />} label=\"Renovação\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Text value={fipe} onChange={handleFipeChange} variant=\"filled\" label=\"R$ Avaliação Tabela Fipe\"/>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={4}>\r\n                            <Button type=\"button\" color=\"#d0d615\">Calcular</Button>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Button type=\"button\" onClick={handleClear} color=\"#15d696\">Novo</Button>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Button type=\"button\" onClick={handleToList} color=\"#7159c1\">Listar</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <h2>Valor estimado do seguro: R$1.080.00</h2>\r\n                    <Button type=\"submit\" color=\"#7159c1\">Registrar Interesse</Button>\r\n                </FormCars>\r\n                {item !== '' ? \r\n                    <ul>\r\n                        {\r\n                            item && item.map(i => (\r\n                                <li key={i.client}>\r\n                                    <h1>{i.client}</h1>\r\n                                    <p>{i.vehicle}</p>\r\n                                    <span>{i.fipe}</span>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                    :\r\n                     <>\r\n                        <em></em>\r\n                        <em></em>\r\n                     </>\r\n                }                \r\n            </Wrapper>\r\n        </Container>\r\n        \r\n    );\r\n}","import { createGlobalStyle } from 'styled-components';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Roboto:300,400,700&display=swap');\r\n\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *:focus {\r\n        outline: 0;\r\n    }\r\n\r\n    body {\r\n        width: 100%;\r\n        height: 100%;\r\n        background: #bea2e7;\r\n        background: linear-gradient(145deg, #bea2e7 0%, #86b7e7 100%) center 100% no-repeat;\r\n        background: -moz-linear-gradient(145deg, #bea2e7 0%, #86b7e7 100%) center 100% no-repeat ;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n\r\n    body, input, button {\r\n        font: 14px 'Roboto', sans-serif;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    ul {\r\n        list-style: none;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React from 'react';\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\n\r\nimport Header from './components/Header';\r\nimport Form from './components/Form';\r\nimport GlobalStyles from './styles/global';\r\n\r\nexport default function src() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Form />\r\n            <GlobalStyles />\r\n            <ToastContainer autoClose={3000}/>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}